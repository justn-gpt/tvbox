name: Sync Upstream

on:
  schedule:
    # 每天凌晨 1 点触发（可根据需要调整时间）
    - cron: '0 1 * * *'

  workflow_dispatch: # 手动触发工作流的选项

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出本地仓库代码
    - name: Checkout local repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # 获取所有提交历史以便完整比较

    # 2. 设置 Git 用户信息
    - name: Configure Git
      run: |
        git config --global user.email "146205844+justn-gpt@users.noreply.github.com"
        git config --global user.name "justn-gpt"

    # 3. 添加上游仓库为远程仓库
    - name: Add upstream repository
      run: |
        git remote add upstream https://github.com/qist/tvbox.git
        git fetch upstream master

    # 4. 检查是否有新提交
    - name: Check for changes in upstream
      id: check_changes
      run: |
        # 比较上游和本地的最新提交
        UPSTREAM_COMMIT=$(git rev-parse upstream/master)
        LOCAL_COMMIT=$(git rev-parse HEAD)
        if [ "$UPSTREAM_COMMIT" != "$LOCAL_COMMIT" ]; then
          echo "New changes detected in upstream."
          echo "::set-output name=has_changes::true"
        else
          echo "No changes in upstream."
          echo "::set-output name=has_changes::false"
        fi

    # 5. 合并并同步（如果有更改）
    - name: Merge and Sync
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git merge upstream/master --no-commit --no-ff || echo "Nothing to merge."
        git restore --staged CNAME .github/workflows # 排除这些文件的更改
        git checkout CNAME .github/workflows       # 恢复本地版本
        if git diff-index --quiet HEAD; then
          echo "No changes to commit."
        else
          git commit -m "Sync with upstream excluding CNAME and workflows"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
